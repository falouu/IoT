#ifndef NODEMCUV3_CAPTIVEPORTAL_RESOURCES_H
#define NODEMCUV3_CAPTIVEPORTAL_RESOURCES_H

#endif //NODEMCUV3_CAPTIVEPORTAL_RESOURCES_H

class Resources {
public:
  const String fetchStatusJs {
    "var error = function(message, err) {"
      "console.log(message, err);"
      "var container = document.getElementById('error');"
      "container.innerText = message + \". Caused by: \" + err;"
      "container.style.display = null"
    "};"
    "var fetchStatus = function() {"
      "return fetch('/status', {"
        "method: 'get'"
      "})"
          ".then(function(response) {"
            "if(!response.ok) {"
              "throw new Error('Invalid status code: ' + response.status)"
            "}"
            "return response.json();"
          "})"
          ".catch(function(err) {"
            "console.log(err);"
            "error(\"Fetch template error!\", err);"
            "throw err;"
          "});"
    "};"
  };

  const String header {
    "<!DOCTYPE html>"
    "<html lang=\"en\">"
    "<head>"
      "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />"
      "<meta charset=\"utf-8\">"
      "<title>ESP8266 Portal</title>"
      "<style>"
        "input {"
          "display: block;"
        "}"
        "input[type=submit] {"
          "display: inline;"
          "margin-right: 3px;"
          "margin-top: 5px;"
        "}"
        ".inline {"
          "display: inline;"
        "}"
        ".data-ssid {"
          "font-weight: bold;"
        "}"
        ".centered {"
          "text-align: center;"
        "}"
        ".hidden {"
          "display: none;"
        "}"
        ".error {"
          "color: red;"
        "}"
        ".loading-text {"
          "color: gray;"
          "font-style: italic;"
        "}"
        ".status-table td:first-child {"
          "text-align: right;"
          "white-space: nowrap;"
        "}"
        ".status-table td:nth-child(2) {"
          "font-weight: bold;"
        "}"
      "</style>"
    "</head>"
    "<body>"
  };

  const String footer {
      "<hr />"
      "<p class=\"centered\"><a href=\"/\">Main page</a></p>"
    "</body>"
    "</html>"
  };

  const String rootContent {
    "<h1>Welcome!</h1>"
    "<h2>WiFi setup</h2>"
    "<table class=\"status-table\">"
      "<tr><td>Current status: </td><td id=\"current-wifi-status\"></td></tr>"
      "<tr class=\"wifi-details hidden\"><td>SSID: </td><td id=\"wifi-ssid\"></td></tr>"
      "<tr class=\"wifi-details hidden\"><td>IP: </td><td id=\"wifi-ip\"></td></tr>"
      "<tr><td>Soft AP status: </td><td id=\"current-soft-ap-status\"></td></tr>"
      "<tr class=\"soft-ap-details hidden\"><td>Soft AP ssid: </td><td id=\"soft-ap-ssid\"></td></tr>"
      "<tr class=\"soft-ap-details hidden\"><td>Soft AP IP: </td><td id=\"soft-ap-ip\"></td></tr>"
      "<tr class=\"soft-ap-details hidden\"><td>Soft AP clients: </td><td id=\"soft-ap-clients\"></td></tr>"
    "</table>"
    "<div style=\"padding-top: 5px\">"
      "<form action=\"/connect\" method=\"post\" id=\"connect-form\" style=\"display: none\">"
          "<label for=\"input_ssid\">SSID: </label>"
          "<input name=\"ssid\" type=\"text\" id=\"input_ssid\" required />"
          "<label for=\"input_password\">Password: </label>"
          "<input name=\"password\" type=\"password\" id=\"input_password\" />"
          "<input type=\"submit\" value=\"Connect\" />"
      "</form>"
      "<div>"
        "<form class=\"inline\" action=\"/disconnect\" method=\"post\" id=\"disconnect-form\" style=\"display: none\">"
          "<input type=\"submit\" value=\"Disconnect\">"
        "</form>"
        "<form class=\"inline\" action=\"/disable-ap\" method=\"post\" id=\"disable-ap-form\" style=\"display: none\">"
          "<input type=\"submit\" value=\"Disable Soft AP\">"
        "</form>"
        "<form class=\"inline\" action=\"/enable-ap\" method=\"post\" id=\"enable-ap-form\" style=\"display: none\">"
          "<input class=\"inline\" type=\"submit\" value=\"Enable Soft AP\">"
        "</form>"
      "</div>"
    "</div>"
    "<script>"
      + fetchStatusJs +
      "var wifiStatus;"
      "var lastWifiStatus;"
      "var wifiIP;"
      "var ssid;"
      "var softAPStatus;"
      "var softAPIP;"
      "var softAPClientsNumber;"
      "var getStatusText = function(cStatus, lStatus) {"
        "var status = cStatus;"
        "if (lStatus && lStatus !== cStatus) {"
          "status += \" (\" + lStatus + \")\""
        "}"
        "return status;"
      "};"
      "var setLoading = function() {"
        "var elems = document.querySelectorAll(\"#current-wifi-status, #current-soft-ap-status\");"
        "var length = elems.length;"
        "for (var index = 0; index < length; index++) {"
            "elems[index].innerText = \"Loading...\";"
            "elems[index].classList.add(\"loading-text\")"
        "}"
      "};"
      "var unsetLoading = function() {"
        "var elems = document.querySelectorAll(\"#current-wifi-status, #current-soft-ap-status\");"
        "var length = elems.length;"
        "for (var index = 0; index < length; index++) {"
          "elems[index].classList.remove(\"loading-text\")"
        "}"
      "};"
      "var updateDocument = function() {"
        "var wifiStatusDOM = document.getElementById('current-wifi-status');"
        "var wifiSsidDOM = document.getElementById('wifi-ssid');"
        "var wifiIpDOM = document.getElementById('wifi-ip');"
        "var connectFormDOM = document.getElementById('connect-form');"
        "var disconnectFormDOM = document.getElementById('disconnect-form');"
        "var disableSoftAPFormDOM = document.getElementById('disable-ap-form');"
        "var enableSoftAPFormDOM = document.getElementById('enable-ap-form');"
        "var wifiDetailsDOMs = document.getElementsByClassName('wifi-details');"
        "var softAPDetailsDOMs = document.getElementsByClassName('soft-ap-details');"
        "var softAPStatusDOM = document.getElementById('current-soft-ap-status');"
        "var softAPssidDOM = document.getElementById('soft-ap-ssid');"
        "var softAPIPDom = document.getElementById('soft-ap-ip');"
        "var softAPClientsDom = document.getElementById('soft-ap-clients');"
        "unsetLoading();"
        "if (this.ssid) {"
          "connectFormDOM.style.display = 'none';"
          "disconnectFormDOM.style.display = null;"
          "[].forEach.call(wifiDetailsDOMs, function (el) { el.classList.remove('hidden'); });"
        "} else {"
          "connectFormDOM.style.display = null;"
          "disconnectFormDOM.style.display = 'none';"
          "[].forEach.call(wifiDetailsDOMs, function (el) { el.classList.add('hidden'); });"
        "}"
        "wifiStatusDOM.innerText = getStatusText(this.wifiStatus, this.lastWifiStatus);"
        "wifiSsidDOM.innerText = this.ssid;"
        "wifiIpDOM.innerText = this.wifiIP;"
        "softAPStatusDOM.innerText = this.softAPStatus === 'true' ? 'enabled' : 'disabled';"
        "if (this.softAPStatus === 'true') {"
          "disableSoftAPFormDOM.style.display = null;"
          "enableSoftAPFormDOM.style.display = 'none';"
          "[].forEach.call(softAPDetailsDOMs, function (el) { el.classList.remove('hidden'); });"
        "} else {"
          "disableSoftAPFormDOM.style.display = 'none';"
          "enableSoftAPFormDOM.style.display = null;"
          "[].forEach.call(softAPDetailsDOMs, function (el) { el.classList.add('hidden'); });"
        "}"
        "softAPssidDOM.innerText = this.softAPssid;"
        "softAPIPDom.innerText = this.softAPIP;"
        "softAPClientsDom.innerText = this.softAPClientsNumber;"
      "};"
      "var fetchStatusLoop = function() {"
        "fetchStatus()"
            ".then(function(status) {"
              "this.wifiStatus = status.wifi.status;"
              "this.lastWifiStatus = status.wifi.lastStatus;"
              "this.wifiIP = status.wifi.localIP;"
              "this.ssid = status.wifi.ssid;"
              "this.softAPStatus = status.softAP.enabled;"
              "this.softAPssid = status.softAP.ssid;"
              "this.softAPIP = status.softAP.ip;"
              "this.softAPClientsNumber = status.softAP.clients;"
              "updateDocument();"
              "setTimeout(fetchStatusLoop, 5000);"
            "});"
      "};"
      "setLoading();"
      "fetchStatusLoop()"
    "</script>"
  };

  const String rootHtml { header + rootContent + footer };

  const String connectingContent {
    "<div id=\"error\" class=\"error\" style=\"display: none\"></div>"
    "<h1 id=\"header-status\">Loading...</h1>"
    "<p>SSID: <span class=\"data-ssid\"></span></p>"
    "<p id=\"counter-line\"><span id=\"counter\"></span> seconds...</p>"
    "<p>Connection status: <span id=\"wifi-status\"></span></p>"
    "<p id=\"connection-success\" style=\"display: none\">"
      "Device successfully connected to network <span class=\"data-ssid\"></span>."
      "Temporary network will shutdown any second soon! Disconnect from it, connect to <span class=\"data-ssid\"></span> network,"
      "and go to <a target=\"_blank\" id=\"local-ip\"></a>"
    "<p id=\"connection-failed\" style=\"display: none\">"
      "Timed out waiting for connection!"
    "</p>"
    "</p>"
    "<script>"
      "var remainingSeconds = 60;"
      "var wifiStatus = undefined;"
      "var ssid = undefined;"
      "var timeout = false;"
      "var lastWifiStatus = null;"
      "var localIP;"
      + fetchStatusJs +
      "var fetchStatusLoop = function() {"
        "fetchStatus()"
            ".then(function (status) {"
              "this.wifiStatus = status.wifi.status;"
              "this.lastWifiStatus = status.wifi.lastStatus;"
              "this.ssid = status.wifi.ssid;"
              "this.localIP = status.wifi.localIP;"
              "document.getElementById('wifi-status').innerText = getStatusText(this.wifiStatus, this.lastWifiStatus);"
              "[].forEach.call(document.getElementsByClassName('data-ssid'), function(el) { el.innerText = ssid; });"
              "if (this.wifiStatus !== 'WL_CONNECTED' && !timeout) {"
                "setTimeout(fetchStatusLoop, 2000);"
              "}"
            "});"
      "};"
      "var connectionFailed = function () {"
        "document.getElementById('connection-failed').style.display = null;"
        "document.getElementById('header-status').innerText = \"Connection failed\";"
        "timeout = true;"
      "};"
      "var connectionSuccess = function() {"
        "document.getElementById('connection-success').style.display = null;"
        "document.getElementById('counter-line').style.display = 'none';"
        "document.getElementById('header-status').innerText = \"Connected\";"
        "var ipLink = \"http://\" + this.localIP;"
        "var ipAnchor = document.getElementById('local-ip');"
        "ipAnchor.innerText = ipLink;"
        "ipAnchor.href = ipLink;"
      "};"
      "var connectionIdle = function () {"
        "document.getElementById('header-status').innerText = \"Waiting for connection...\""
      "};"
      "var getStatusText = function(cStatus, lStatus) {"
          "var status = cStatus;"
          "if (lStatus && lStatus !== cStatus) {"
              "status += \" (\" + lStatus + \")\""
          "}"
          "return status;"
      "};"
      "var tickCounter = function() {"
        "if (remainingSeconds < 0) {"
          "connectionFailed();"
          "clearInterval(counterTicker);"
          "return;"
        "}"
        "setCounter(remainingSeconds--);"
        "if (this.wifiStatus === 'WL_CONNECTED') {"
          "connectionSuccess();"
          "clearInterval(counterTicker);"
        "} else if (this.wifiStatus === 'WL_IDLE_STATUS') {"
          "connectionIdle();"
        "}"
      "};"
      "var setCounter = function(val) {"
        "document.getElementById('counter').innerText = val;"
      "};"
      "var counterTicker = setInterval(tickCounter, 1000);"
      "tickCounter();"
      "fetchStatusLoop();"
    "</script>"
  };

  const String connectingHtml { header + connectingContent + footer };
};