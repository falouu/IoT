{{> header }}
<h1>Welcome!</h1>
<h2>WiFi setup</h2>
<div id="message" class="alert alert-success" style="display: none"></div>
<div id="fetch-status-error" class="error alert" style="display: none"></div>
<table class="status-table">
  <tr><td>Current status: </td><td id="current-wifi-status"></td></tr>
  <tr class="wifi-details hidden"><td>SSID: </td><td id="wifi-ssid"></td></tr>
  <tr class="wifi-details hidden"><td>IP: </td><td id="wifi-ip"></td></tr>
  <tr><td>Soft AP status: </td><td id="current-soft-ap-status"></td></tr>
  <tr class="soft-ap-details hidden"><td>Soft AP ssid: </td><td id="soft-ap-ssid"></td></tr>
  <tr class="soft-ap-details hidden"><td>Soft AP IP: </td><td id="soft-ap-ip"></td></tr>
  <tr class="soft-ap-details hidden"><td>Soft AP clients: </td><td id="soft-ap-clients"></td></tr>
</table>
<div style="padding-top: 5px">
  <form action="/connect" method="post" id="connect-form" style="display: none">
      <label for="input_ssid">SSID: </label>
      <input name="ssid" type="text" id="input_ssid" required />
      <label for="input_password">Password: </label>
      <input name="password" type="password" id="input_password" />
      <input type="submit" value="Connect" />
  </form>
  <div>
    <form class="inline" action="/disconnect" method="post" id="disconnect-form" style="display: none">
      <input type="submit" value="Disconnect">
    </form>
    <form class="inline" action="/disable-ap" method="post" id="disable-ap-form" style="display: none">
      <input type="submit" value="Disable Soft AP">
    </form>
    <form class="inline" action="/enable-ap" method="post" id="enable-ap-form" style="display: none">
      <input class="inline" type="submit" value="Enable Soft AP">
    </form>
  </div>
</div>
<script>
  {{> fetch_status_js }}
  var wifiStatus;
  var lastWifiStatus;
  var wifiIP;
  var ssid;
  var softAPStatus;
  var softAPIP;
  var softAPClientsNumber;

  var getStatusText = function(cStatus, lStatus) {
    var status = cStatus;
    if (lStatus && lStatus !== cStatus) {
      status += " (" + lStatus + ")"
    }
    return status;
  };

  var setLoading = function() {
    var elems = document.querySelectorAll("#current-wifi-status, #current-soft-ap-status");
    var length = elems.length;
    for (var index = 0; index < length; index++) {
        elems[index].innerText = "Loading...";
        elems[index].classList.add("loading-text")
    }
  };

  var unsetLoading = function() {
    var elems = document.querySelectorAll("#current-wifi-status, #current-soft-ap-status");
    var length = elems.length;
    for (var index = 0; index < length; index++) {
      elems[index].classList.remove("loading-text")
    }
  };

  var updateDocument = function() {
    var wifiStatusDOM = document.getElementById('current-wifi-status');
    var wifiSsidDOM = document.getElementById('wifi-ssid');
    var wifiIpDOM = document.getElementById('wifi-ip');

    var connectFormDOM = document.getElementById('connect-form');
    var disconnectFormDOM = document.getElementById('disconnect-form');
    var disableSoftAPFormDOM = document.getElementById('disable-ap-form');
    var enableSoftAPFormDOM = document.getElementById('enable-ap-form');

    var wifiDetailsDOMs = document.getElementsByClassName('wifi-details');
    var softAPDetailsDOMs = document.getElementsByClassName('soft-ap-details');

    var softAPStatusDOM = document.getElementById('current-soft-ap-status');
    var softAPssidDOM = document.getElementById('soft-ap-ssid');
    var softAPIPDom = document.getElementById('soft-ap-ip');
    var softAPClientsDom = document.getElementById('soft-ap-clients');

    unsetLoading();

    if (this.ssid) {
      connectFormDOM.style.display = 'none';
      disconnectFormDOM.style.display = null;
      [].forEach.call(wifiDetailsDOMs, function (el) { el.classList.remove('hidden'); });
    } else {
      connectFormDOM.style.display = null;
      disconnectFormDOM.style.display = 'none';
      [].forEach.call(wifiDetailsDOMs, function (el) { el.classList.add('hidden'); });
    }

    wifiStatusDOM.innerText = getStatusText(this.wifiStatus, this.lastWifiStatus);
    wifiSsidDOM.innerText = this.ssid;
    wifiIpDOM.innerText = this.wifiIP;
    softAPStatusDOM.innerText = this.softAPStatus === 'true' ? 'enabled' : 'disabled';

    if (this.softAPStatus === 'true') {
      disableSoftAPFormDOM.style.display = null;
      enableSoftAPFormDOM.style.display = 'none';
      [].forEach.call(softAPDetailsDOMs, function (el) { el.classList.remove('hidden'); });
    } else {
      disableSoftAPFormDOM.style.display = 'none';
      enableSoftAPFormDOM.style.display = null;
      [].forEach.call(softAPDetailsDOMs, function (el) { el.classList.add('hidden'); });
    }

    softAPssidDOM.innerText = this.softAPssid;
    softAPIPDom.innerText = this.softAPIP;
    softAPClientsDom.innerText = this.softAPClientsNumber;
  };

  var getParameterByName = function(name) {
    var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);
    return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
  };

  var showMessage = function() {
    var message = getParameterByName('message');
    if (message) {
      var container = document.getElementById('message');
      container.innerText = message;
      container.style.display = null;
      window.history.replaceState({}, document.title, window.location.pathname);
    }
  };

  var fetchStatusLoop = function() {
    setLoading();
    fetchStatus()
        .then(function(status) {
          this.wifiStatus = status.wifi.status;
          this.lastWifiStatus = status.wifi.lastStatus;
          this.wifiIP = status.wifi.localIP;
          this.ssid = status.wifi.ssid;

          this.softAPStatus = status.softAP.enabled;
          this.softAPssid = status.softAP.ssid;
          this.softAPIP = status.softAP.ip;
          this.softAPClientsNumber = status.softAP.clients;
          updateDocument();
        })
        .catch(function(err) {
        })
        .then(function() {
          setTimeout(fetchStatusLoop, 5000);
        });
  };

  showMessage();
  fetchStatusLoop()

</script>
{{> footer }}